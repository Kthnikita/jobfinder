// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model job {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  title            String
  description      String
  location         String
  salary           Int
  employement_type String @default("fulltime")
  job_type         String @default("on-site")
}

model user {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String        @unique
  password    String
  role        String
  usercomp    company?
  review      review[]
  Application application[]

}

model company {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  ownerid     String     @unique @db.ObjectId
  description String
  img_url     String?
  owner       user       @relation(fields: [ownerid], references: [id])
  jobs        openings[]
  
}

model openings {
  id               String  @id @default(auto()) @map("_id") @db.ObjectId
  title            String
  description      String
  location         String
  salary           Int
  employement_type String  @default("fulltime")
  job_type         String  @default("on-site")
  comp_id          String  @db.ObjectId
  comp             company @relation(fields: [comp_id], references: [id])
  applicants application[]
}

model review {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  content    String
  user_id    String @db.ObjectId
  user       user   @relation(fields: [user_id], references: [id])
  company_id String
}

model application {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  user_id String @db.ObjectId
  user    user   @relation(fields: [user_id], references: [id])
  job_id  String @db.ObjectId
  job openings @relation(fields:[job_id],references: [id])
}
